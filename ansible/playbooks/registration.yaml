---
- name: Register
  hosts: all
  remote_user: cloudadmin
  become: true
  become_user: root

  vars:
    use_suseconnect: false  # Set to false unless specified
    suseconnect_status: {}
    extensions_status: {}

  tasks:

    # Pre flight checks
    - name: Check for SUSEConnect binary presence
      ansible.builtin.command: which SUSEConnect
      changed_when: false

    # Do we have repos?  If not, we need to register
    - name: Check for registration
      ansible.builtin.command: SUSEConnect -s
      register: repos
      failed_when: false
      changed_when: false

    # Check if there are instances of `Not Registered` in it
    - name: Check for 'Not Registered'
      ansible.builtin.set_fact:
        not_registered_found: "{{ 'Not Registered' in repos.stdout }}"
      # ignore_errors: true

    - name: Straight convert SUSEConnect -s output into a data structure
      ansible.builtin.set_fact:
        suseconnect_status_json: "{{ repos.stdout | from_json }}"

    - name: Convert SUSEConnect -s output into a more usable data structure
      ansible.builtin.set_fact:
        suseconnect_status: "{{ suseconnect_status | combine({
          item['identifier']: {
            'status': item['status'],
            'version': item['version'],
            'arch': item['arch'] }} ) }}"
      with_items: "{{ repos.stdout | default([]) }}"

    - name: Print suseconnect status
      ansible.builtin.debug:
        msg:
          - "not_registered_found: '{{ not_registered_found }}'"
          - "suseconnect_status:'{{ suseconnect_status }}'"
          - "suseconnect_status_json:'{{ suseconnect_status_json }}'"

    # Is registercloudguest available?
    # only run it if:
    #  - there's at least one 'Not Registered' module
    - name: Check for registercloudguest
      ansible.builtin.command: which registercloudguest
      register: is_registercloudguest_bin
      failed_when: false
      changed_when: false

    # Execute Section

    # Start by pre-cleaning all. Only run it if:
    #  - the registercloudguest binary is available
    #  - there's at least one 'Not Registered' module
    #  - the user does not require only use SUSEConnect with 'use_suseconnect'
    - name: Pre-run cleaning registercloudguest
      ansible.builtin.command: registercloudguest --clean
      when:
        - not_registered_found
        - is_registercloudguest_bin.rc == 0
        - not use_suseconnect | bool

    - name: Run registercloudguest registration
      ansible.builtin.command: registercloudguest --force-new -r "{{ reg_code }}" -e "{{ email_address }}"
      register: result
      until: result is succeeded
      retries: 10
      delay: 60
      failed_when: result.rc != 0 or result.stderr != ""
      when:
        - not_registered_found
        - is_registercloudguest_bin.rc == 0
        - not use_suseconnect | bool

    # Fall back on SUSEConnect if:
    #   - registercloudguest is not present
    # or
    #   - the user explicitly require using SUSEConnect
    - name: SUSEConnect registration
      ansible.builtin.command: SUSEConnect -r "{{ reg_code }}" -e "{{ email_address }}"
      register: result
      until: result is succeeded
      retries: 10
      delay: 60
      when:
        - not_registered_found
        - "(is_registercloudguest_bin.rc != 0) or (use_suseconnect | bool)"

    # There are additional repos to add.
    # These are handled differently for SLES 15 and SLES12
    - name: Add SLES 12 Advanced Systems Modules
      ansible.builtin.command: SUSEConnect -p sle-module-adv-systems-management/12/{{ ansible_facts['architecture'] }} -r "{{ reg_code }}"
      register: result
      until: result is succeeded
      retries: 10
      delay: 60
      when:
        - ansible_facts['distribution_major_version'] == "12"

    - name: Add SLES 12 public cloud module
      ansible.builtin.command: SUSEConnect -p sle-module-public-cloud/12/{{ ansible_facts['architecture'] }}
      register: result
      until: result is succeeded
      retries: 10
      delay: 60
      when:
        - ansible_facts['distribution_major_version'] == "12"
        - not_registered_found
        - "(is_registercloudguest_bin.rc != 0) or (use_suseconnect | bool)"

    - name: Add SLES 15 public cloud module
      ansible.builtin.command: SUSEConnect -p sle-module-public-cloud/{{ ansible_facts['distribution_version'] }}/{{ ansible_facts['architecture'] }}
      register: result
      until: result is succeeded
      retries: 10
      delay: 60
      when:
        - ansible_facts['distribution_major_version'] == "15"
        - not_registered_found
        - "(is_registercloudguest_bin.rc != 0) or (use_suseconnect | bool)"

    # Latest version of cloud-regionsrv-client is needed in PAYG, and image
    # needs to be registered in order for zypper up to work.
    # see https://www.suse.com/c/long-term-service-pack-support-for-payg-instances-simplified/
    - name: Ensure cloud-regionsrv-client is on latest version.
      community.general.zypper:
        name: cloud-regionsrv-client
        state: latest
      when:
        - sles_modules is defined and sles_modules | length > 0

    # Do we have extensions?
    - name: Check for extensions
      ansible.builtin.command: SUSEConnect --list-extensions --json
      register: extensions
      failed_when: false
      changed_when: false

    - name: Convert SUSEConnect --list-extensions output into a data structure (json)
      ansible.builtin.set_fact:
        extensions_status_json: "{{ extensions.stdout | from_json }}"

    - name: Convert SUSEConnect --list-extensions output into a more usable data structure
      ansible.builtin.set_fact:
        extensions_status: "{{ extensions_status | combine( {
          item['identifier']: {
            'available': item['available'],
            'activated': item['activated'],
            'name': item['name'],
            'version': item['version'],
            'arch': item['arch'] }
          } ) }}"
      with_items: "{{ extensions.stdout | from_json | community.general.json_query('extensions[*]')  }}"

    - name: Print suseconnect extensions
      ansible.builtin.debug:
        msg:
          - "extensions_status:'{{ extensions_status }}'"
          - "extensions_status_json:'{{ extensions_status_json }}'"

    - name: Add additional authenticated modules [SUSEConnnect]
      ansible.builtin.command: SUSEConnect -p {{ item.key }} -r {{ item.value }}
      register: result
      until: result is succeeded
      retries: 10
      delay: 60
      when:
        - sles_modules is defined and sles_modules | length > 0
        - "(is_registercloudguest_bin.rc != 0) or (use_suseconnect | bool)"
      loop: "{{ sles_modules }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Add additional authenticated modules [registercloudguest]
      ansible.builtin.command: registercloudguest -r {{ item.value }}
      register: result
      until: result is succeeded
      retries: 10
      delay: 60
      when:
        - sles_modules is defined and sles_modules | length > 0
        - is_registercloudguest_bin.rc == 0
        - not use_suseconnect | bool
      loop: "{{ sles_modules }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Check if repos are added after registration
      ansible.builtin.command: zypper lr -u
      register: repos_after
      failed_when: repos_after.rc != 0
